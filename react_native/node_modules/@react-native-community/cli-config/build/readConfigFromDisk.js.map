{"version":3,"names":["searchPlaces","readConfigFromDiskAsync","rootFolder","explorer","cosmiconfig","stopDir","searchResult","search","config","undefined","result","schema","projectConfig","validate","error","JoiError","value","readConfigFromDisk","cosmiconfigSync","readDependencyConfigFromDiskAsync","dependencyName","emptyDependencyConfig","dependencyConfig","abortEarly","validationError","logger","warn","inlineString","chalk","bold","message","readDependencyConfigFromDisk","dependency","platforms","commands"],"sources":["../src/readConfigFromDisk.ts"],"sourcesContent":["import {cosmiconfig, cosmiconfigSync} from 'cosmiconfig';\nimport {JoiError} from './errors';\nimport * as schema from './schema';\nimport {\n  UserConfig,\n  UserDependencyConfig,\n} from '@react-native-community/cli-types';\nimport {logger, inlineString} from '@react-native-community/cli-tools';\nimport chalk from 'chalk';\n\n/**\n * Places to look for the configuration file.\n */\nconst searchPlaces = [\n  'react-native.config.js',\n  'react-native.config.cjs',\n  'react-native.config.mjs',\n  'react-native.config.ts',\n  'react-native.config.mjs',\n];\n\n/**\n * Reads a project configuration as defined by the user in the current\n * workspace.\n */\nexport async function readConfigFromDiskAsync(\n  rootFolder: string,\n): Promise<UserConfig> {\n  const explorer = cosmiconfig('react-native', {\n    stopDir: rootFolder,\n    searchPlaces,\n  });\n\n  const searchResult = await explorer.search(rootFolder);\n\n  const config = searchResult ? searchResult.config : undefined;\n  const result = schema.projectConfig.validate(config);\n\n  if (result.error) {\n    throw new JoiError(result.error);\n  }\n\n  return result.value as UserConfig;\n}\n\n/**\n * Reads a project configuration as defined by the user in the current\n * workspace synchronously.\n */\n\nexport function readConfigFromDisk(rootFolder: string): UserConfig {\n  const explorer = cosmiconfigSync('react-native', {\n    stopDir: rootFolder,\n    searchPlaces,\n  });\n\n  const searchResult = explorer.search(rootFolder);\n\n  const config = searchResult ? searchResult.config : undefined;\n  const result = schema.projectConfig.validate(config);\n\n  if (result.error) {\n    throw new JoiError(result.error);\n  }\n\n  return result.value as UserConfig;\n}\n\n/**\n * Reads a dependency configuration as defined by the developer\n * inside `node_modules`.\n */\nexport async function readDependencyConfigFromDiskAsync(\n  rootFolder: string,\n  dependencyName: string,\n): Promise<UserDependencyConfig> {\n  const explorer = cosmiconfig('react-native', {\n    stopDir: rootFolder,\n    searchPlaces,\n  });\n\n  const searchResult = await explorer.search(rootFolder);\n  const config = searchResult ? searchResult.config : emptyDependencyConfig;\n\n  const result = schema.dependencyConfig.validate(config, {abortEarly: false});\n\n  if (result.error) {\n    const validationError = new JoiError(result.error);\n    logger.warn(\n      inlineString(`\n        Package ${chalk.bold(\n          dependencyName,\n        )} contains invalid configuration: ${chalk.bold(\n        validationError.message,\n      )}.\n      \n      Please verify it's properly linked using \"npx react-native config\" command and contact the package maintainers about this.`),\n    );\n  }\n\n  return result.value as UserDependencyConfig;\n}\n\n/**\n * Reads a dependency configuration as defined by the developer\n * inside `node_modules` synchronously.\n */\n\nexport function readDependencyConfigFromDisk(\n  rootFolder: string,\n  dependencyName: string,\n): UserDependencyConfig {\n  const explorer = cosmiconfigSync('react-native', {\n    stopDir: rootFolder,\n    searchPlaces,\n  });\n\n  const searchResult = explorer.search(rootFolder);\n  const config = searchResult ? searchResult.config : emptyDependencyConfig;\n\n  const result = schema.dependencyConfig.validate(config, {abortEarly: false});\n\n  if (result.error) {\n    const validationError = new JoiError(result.error);\n    logger.warn(\n      inlineString(`\n        Package ${chalk.bold(\n          dependencyName,\n        )} contains invalid configuration: ${chalk.bold(\n        validationError.message,\n      )}.\n      \n      Please verify it's properly linked using \"npx react-native config\" command and contact the package maintainers about this.`),\n    );\n  }\n\n  return result.value as UserDependencyConfig;\n}\n\nconst emptyDependencyConfig = {\n  dependency: {\n    platforms: {},\n  },\n  commands: [],\n  platforms: {},\n};\n"],"mappings":"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"}